{"version":3,"sources":["components/ViewPane.js","config.js","components/Panel.js","App.js","index.js"],"names":["ViewPane","props","Row","className","Col","label","text","sourceDataURL","propertyName","Panel","refreshDisplay","console","log","fetch","method","then","response","json","data","setState","displayedData","startRefresh","setInterval","refreshDataIntervalInSeconds","reload","window","location","scheduleReload","pageReloadTimeInSeconds","render","state","React","Component","App","ReactDOM","document","getElementById"],"mappings":"mRAgBeA,MAXf,SAAkBC,GAChB,OACE,eAACC,EAAA,EAAD,CAAKC,UAAU,uBAAf,UACE,cAACC,EAAA,EAAD,CAAKD,UAAU,QAAf,SAAwBF,EAAMI,QAC9B,cAACH,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAKD,UAAU,UAAf,SAA0BF,EAAMK,aCR3BC,EAAgB,yDAChBC,EAAe,cC2CbC,E,kDAzCb,aAAe,IAAD,8BACZ,gBAMFC,eAAiB,WACfC,QAAQC,IAAI,+BAA4CL,GACxDM,MAAMN,EAAe,CACnBO,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEC,cAAeF,EAAKV,SAb1C,EAgBda,aAAe,WACbV,QAAQC,IAAI,oDACZ,EAAKF,iBACLY,YAAY,EAAKZ,eAAgBa,MAnBrB,EAsBdC,OAAS,WACPb,QAAQC,IAAI,gBACZa,OAAOC,SAASF,QAAO,IAxBX,EA2BdG,eAAiB,WACfhB,QAAQC,IAAI,kDACZU,YAAY,EAAKE,OAAQI,OA7Bb,EAgCdC,OAAS,WACP,OACE,qBAAK1B,UAAU,iBAAf,SACE,cAAC,EAAD,CAAUG,KAAM,EAAKwB,MAAMV,cAAef,MDpCzB,oBCGrB,EAAKyB,MAAQ,CAAEV,cAAe,MAC9B,EAAKC,eACL,EAAKM,iBAJO,E,uBADII,IAAMC,WCEXC,MAJf,SAAahC,GACX,OAAO,cAAC,EAAD,KCGTiC,IAASL,OAAO,cAAC,EAAD,IAASM,SAASC,eAAe,W","file":"static/js/main.6f9fd809.chunk.js","sourcesContent":["import Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./ViewPane.css\";\r\nimport React from \"react\";\r\n\r\nfunction ViewPane(props) {\r\n  return (\r\n    <Row className=\"panel resizeToScreen\">\r\n      <Col className=\"label\">{props.label}</Col>\r\n      <Row>\r\n        <Col className=\"content\">{props.text}</Col>\r\n      </Row>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ViewPane;\r\n","export const refreshDataIntervalInSeconds = 300;\r\nexport const pageReloadTimeInSeconds = 7200;\r\nexport const sourceDataURL = \"https://d39d2qwqe4dbq8.cloudfront.net/study-count.json\";\r\nexport const propertyName = \"study-count\";\r\nexport const labelName = \"Live Studies\";\r\n","import ViewPane from \"./ViewPane\";\r\nimport React from \"react\";\r\nimport {refreshDataIntervalInSeconds, pageReloadTimeInSeconds, propertyName, sourceDataURL, labelName} from '../config';\r\n\r\nclass Panel extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { displayedData: \"--\" };\r\n    this.startRefresh();\r\n    this.scheduleReload();\r\n  }\r\n\r\n  refreshDisplay = () => {\r\n    console.log(\"Fetching \\\"\" + propertyName + \"\\\" from \" + sourceDataURL);\r\n    fetch(sourceDataURL, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ displayedData: data[propertyName] }));\r\n  };\r\n\r\n  startRefresh = () => {\r\n    console.log(\"Interval delay is set to refresh every \" + refreshDataIntervalInSeconds/60 + \" minutes\")\r\n    this.refreshDisplay();\r\n    setInterval(this.refreshDisplay, refreshDataIntervalInSeconds * 1000);\r\n  };\r\n\r\n  reload = () => {\r\n    console.log(\"Reloading...\");\r\n    window.location.reload(false);\r\n  };\r\n\r\n  scheduleReload = () => {\r\n    console.log(\"Interval delay is set to reload in \" + pageReloadTimeInSeconds/60 + \" minutes\")\r\n    setInterval(this.reload, pageReloadTimeInSeconds * 1000);\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"viewpane panel\">\r\n        <ViewPane text={this.state.displayedData} label={labelName} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Panel;\r\n","import Panel from \"./components/Panel\";\n\nfunction App(props) {\n  return <Panel />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}